^["uv.ceu"]

task Split (next) {
    var line = ""
    var tmp = yield()
    while tmp {
        while in :vector tmp, (_,c) {
            if c == '\n' {
                resume next(move(line))
                set line = ""
            } else {
                set line[+] = c
            }
        }
        set tmp = yield()
    }
}

task Number (next) {
    var line = yield()
    var i = 1
    while line {
        resume next(tostring(i) ++ (": " ++ line))
        set line = yield()
        set i = i + 1
    }
}

task Take (n, next) {
    var i = 0
    while i < n {
        resume next(yield())
        set i = i + 1
    }
    throw :done
}

task Show () {
    var line = yield()
    while line {
        println(line)
        set line = yield()
    }
}

;;spawn Show() <|< spawn Number(show) <|< spawn Split(number) <|< spawn UV-FS-Read(f,split)

spawn {
    catch :done {
        var show   = spawn Show()
        var take   = spawn Take(10, show)
        var number = spawn Number(take)
        var split  = spawn Split(number)
        var read   = spawn UV-FS-Read("ceu/01-fs-cat.txt", split)
        yield()
    }
}

UV-Loop()
